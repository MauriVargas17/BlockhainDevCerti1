{"version":3,"sources":["logo.svg","ethereum/web3.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialize","ethereum","window","Boolean","isMetaMask","isMetamaskInstalled","alert","web3","Web3","connectWallet","request","method","code","message","App","useState","setContract","manager","setManager","players","setPlayers","balance","setBalance","useEffect","loadBlockchainData","networkData","lotteryContract","networks","console","log","abi","address","eth","Contract","deployedContract","methods","getPlayers","call","length","owner","getBalance","options","className","src","logo","alt","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"u+2HAAe,MAA0B,iC,2BCO5BA,EAAa,YALE,WACxB,IAAOC,EAAYC,OAAZD,SACP,OAAOE,QAAQF,GAAYA,EAASG,YAIjCC,GAICC,MAAM,iCAHNA,MAAM,0BACNJ,OAAOK,KAAO,IAAIC,IAAKN,OAAOD,YAMzBQ,EAAa,iDAAG,iHAEfP,OAAOD,SAASS,QAAQ,CAACC,OAAQ,wBAFlB,OAGrBL,MAAM,qCAHe,+CAKP,OAAX,KAAEM,KACDN,MAAM,uBAENA,MAAM,KAAEO,SARS,wDAAH,qD,iBC8DXC,MAxEf,WAEI,MAAgCC,mBAAc,IAA9C,mBAAiBC,GAAjB,WAOA,EAA8BD,mBAAc,IAA5C,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA8BH,mBAAc,IAA5C,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,mBAAc,IAA5C,mBAAOM,EAAP,KAAgBC,EAAhB,KAGAC,qBAAU,WAEHrB,OAAOK,OACNP,IACAwB,OAEL,IAEH,IAAMA,EAAkB,iDAAG,+GAEjBhB,EAAON,OAAOK,KAEdkB,EAAcC,EAAgBC,SAAS,MAC7CC,QAAQC,IAAI,gBAAiBJ,IAE1BA,EAPoB,wBAQbK,EAAMJ,EAAgBI,IACtBC,EAAUN,EAAYM,QAC5BH,QAAQC,IAAI,YAAaE,GAVN,SAWY,IAAIvB,EAAKwB,IAAIC,SAASH,EAAKC,GAXvC,cAWbG,EAXa,iBAcGA,EAAiBC,QAAQC,aAAaC,OAdzC,eAcblB,EAda,iBAebC,EAAWD,GAfE,eAiBnBS,QAAQC,IAAI,YAAaV,EAASA,EAAQmB,QAjBvB,UAmBGJ,EAAiBC,QAAQI,QAAQF,OAnBpC,eAmBbpB,EAnBa,iBAoBbC,EAAWD,GApBE,yBAsBGT,EAAKwB,IAAIQ,WAAWN,EAAiBO,QAAQV,SAtBhD,eAsBbV,EAtBa,iBAuBbC,EAAWD,GAvBE,yBAyBbL,EAAYkB,GAzBC,4CAAH,qDA+B1B,OACE,qBAAKQ,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAIE,+DACA,wBAAQC,QAAW,kBAAMrC,KAAzB,qBAEA,0CAAaU,EAAQmB,UACrB,0CAAajB,KACb,0CAAaJ,WC1DR8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHDQ,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,OAOJd,M","file":"static/js/main.9152fae6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Web3 from \"web3\";\n\nconst isMetamaskInstalled = () => {\n    const {ethereum} = window;\n    return Boolean(ethereum && ethereum.isMetaMask);\n}\n\nexport const initialize = () => {\n    if(isMetamaskInstalled()){\n        alert(\"Metamask is installed!\");\n        window.web3 = new Web3(window.ethereum);\n    } else {\n        alert(\"Metamask is not installed...\");\n    }\n}\n\nexport const connectWallet = async () => {\n    try{\n        await window.ethereum.request({method: \"eth_requestAccounts\"});\n        alert(\"Wallet was successfully connected\");\n    } catch (e) {\n        if(e.code === 4001){\n            alert(\"Connecting error...\");\n        } else {\n            alert(e.message);\n        }\n    }\n\n}","import React, {Component, useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {connectWallet, initialize} from \"./ethereum/web3\";\nimport lotteryContract from \"./ethereum/abis/Lottery.json\"\n\nfunction App() {\n\n    const [contract, setContract] = useState<any>('');\n    // console.log(contract);\n    // setContract('new value');\n\n    /*\n        Variables to handle the smart contract\n    */\n    const [manager, setManager] = useState<any>('');\n    const [players, setPlayers] = useState<any>({});\n    const [balance, setBalance] = useState<any>('');\n\n\n    useEffect(() => {\n        // @ts-ignore\n        if(window.web3){\n            initialize();\n            loadBlockchainData();\n        }\n    }, [])\n\n    const loadBlockchainData = async () => {\n        // @ts-ignore\n        const Web3 = window.web3;\n\n        const networkData = lotteryContract.networks['5777'];\n        console.log('networkData: ', networkData);\n\n        if(networkData){\n            const abi = lotteryContract.abi;\n            const address = networkData.address;\n            console.log('address: ', address);\n            const deployedContract = await new Web3.eth.Contract(abi, address);\n\n\n            const players = await deployedContract.methods.getPlayers().call();\n            await setPlayers(players);\n\n            console.log('players: ', players, players.length);\n\n            const manager = await deployedContract.methods.owner().call();\n            await setManager(manager);\n\n            const balance = await Web3.eth.getBalance(deployedContract.options.address);\n            await setBalance(balance);\n\n            await setContract(deployedContract);\n\n\n        }\n    }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n\n          <p>Hi React, Truffle and Firebase</p>\n          <button onClick = {() => connectWallet()}>Connect</button>\n\n          <p>Players: {players.length}</p>\n          <p>Balance: {balance}</p>\n          <p>Manager: {manager}</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}